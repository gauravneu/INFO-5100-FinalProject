/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package info.pkg5100.finalproject.ui;

import info.pkg5100.finalproject.daos.VitalSignsDaoImplementation;
import info.pkg5100.finalproject.models.Patient;
import info.pkg5100.finalproject.models.VitalSigns;
import info.pkg5100.finalproject.utils.SimpleTools;
import java.awt.CardLayout;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author gaurav
 */
public class VitalSignsPortal extends javax.swing.JPanel {

    /**
     * Creates new form HospitalPatientPortal
     */
    JPanel mainWorkJPanel;
    Patient currentPatient;
    VitalSignsDaoImplementation vitalSignsDaoImplementation;

    public VitalSignsPortal() {
        initComponents();
    }

    public VitalSignsPortal(JPanel mainWorkJPanel, Patient currentPatient) {
        initComponents();

        this.mainWorkJPanel = mainWorkJPanel;
        this.currentPatient = currentPatient;

        this.vitalSignsDaoImplementation = new VitalSignsDaoImplementation();

        populateVitalSigns();
        populateDataForVitalSignsSelection();
        populatePatientDetailsOnPortal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblPatientName = new javax.swing.JLabel();
        lblPatientAge = new javax.swing.JLabel();
        lblPatientPhone = new javax.swing.JLabel();
        lblPatientStatus = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVitalSigns = new javax.swing.JTable();
        lblVitalSigns = new javax.swing.JLabel();
        lblBloodPressure = new javax.swing.JLabel();
        lblGlucoseLevel = new javax.swing.JLabel();
        lblBodyTemp = new javax.swing.JLabel();
        lblRespirationRate = new javax.swing.JLabel();
        lblOxygenSaturation = new javax.swing.JLabel();
        lblPainLevel = new javax.swing.JLabel();
        jcbBloodPressure = new javax.swing.JComboBox<>();
        jcbRespirationRate = new javax.swing.JComboBox<>();
        jcbBodyTemp = new javax.swing.JComboBox<>();
        jcbOxygenSaturation = new javax.swing.JComboBox<>();
        jcbPainLevel = new javax.swing.JComboBox<>();
        jcbGlucoseLevel = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnAddVital = new javax.swing.JButton();
        btnAddVital1 = new javax.swing.JButton();
        btnAddVital2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Patient name:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Patient Status:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Patient age:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Patient phone:");

        lblPatientName.setText("patient_name_placeholder");

        lblPatientAge.setText("patient_age_placeholder");

        lblPatientPhone.setText("patient_phone_placeholder");

        lblPatientStatus.setText("patient_status_placeholder");

        tblVitalSigns.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Date", "Blood Pressure", "Glucosel Level", "Body Temp", "Respiration Rate", "Oxygen Saturation", "Pain Level"
            }
        ));
        jScrollPane1.setViewportView(tblVitalSigns);

        lblVitalSigns.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblVitalSigns.setText("Vital Signs");

        lblBloodPressure.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblBloodPressure.setText("Blood Pressure :");

        lblGlucoseLevel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblGlucoseLevel.setText("Glucose Level :");

        lblBodyTemp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblBodyTemp.setText("Body Temp :");

        lblRespirationRate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblRespirationRate.setText("Respiration Rate :");

        lblOxygenSaturation.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblOxygenSaturation.setText("Oxygen Saturation :");

        lblPainLevel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPainLevel.setText("Pain Level :");

        jcbBloodPressure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcbRespirationRate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcbBodyTemp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcbOxygenSaturation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcbPainLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcbGlucoseLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setBackground(new java.awt.Color(31, 75, 124));
        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Vital Signs");
        jLabel6.setOpaque(true);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Patient Information");

        btnBack.setBackground(new java.awt.Color(31, 75, 124));
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAddVital.setBackground(new java.awt.Color(31, 75, 124));
        btnAddVital.setForeground(new java.awt.Color(255, 255, 255));
        btnAddVital.setText("Add Vitals");
        btnAddVital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVitalActionPerformed(evt);
            }
        });

        btnAddVital1.setBackground(new java.awt.Color(31, 75, 124));
        btnAddVital1.setForeground(new java.awt.Color(255, 255, 255));
        btnAddVital1.setText("Delete Vitals");
        btnAddVital1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVital1ActionPerformed(evt);
            }
        });

        btnAddVital2.setBackground(new java.awt.Color(31, 75, 124));
        btnAddVital2.setForeground(new java.awt.Color(255, 255, 255));
        btnAddVital2.setText("Update Vitals");
        btnAddVital2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVital2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 1061, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPatientStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPatientPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel8))
                        .addGap(200, 200, 200)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblOxygenSaturation)
                            .addComponent(lblBloodPressure)
                            .addComponent(lblGlucoseLevel)
                            .addComponent(lblBodyTemp)
                            .addComponent(lblRespirationRate)
                            .addComponent(lblPainLevel))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcbOxygenSaturation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbPainLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbRespirationRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbBodyTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbGlucoseLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 868, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(381, 381, 381)
                        .addComponent(lblVitalSigns, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddVital2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92)
                        .addComponent(btnAddVital1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(434, 434, 434))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAddVital, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(324, 324, 324))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(btnBack)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jcbBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBloodPressure))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblOxygenSaturation)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jcbGlucoseLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblGlucoseLevel))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jcbBodyTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblBodyTemp))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jcbRespirationRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblRespirationRate))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jcbOxygenSaturation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPainLevel)
                            .addComponent(jcbPainLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lblPatientName))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(lblPatientAge))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(lblPatientPhone))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(lblPatientStatus))))
                .addGap(18, 18, 18)
                .addComponent(btnAddVital)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblVitalSigns, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddVital2)
                    .addComponent(btnAddVital1))
                .addGap(135, 135, 135))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        mainWorkJPanel.remove(this);
        CardLayout layout = (CardLayout)mainWorkJPanel.getLayout();
        layout.previous(mainWorkJPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddVitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVitalActionPerformed
        try {
            if (jcbPainLevel.getSelectedItem().toString().equals("Select")
                    || jcbBloodPressure.getSelectedItem().toString().equals("Select")
                    || jcbBodyTemp.getSelectedItem().toString().equals("Select")
                    || jcbGlucoseLevel.getSelectedItem().toString().equals("Select")
                    || jcbOxygenSaturation.getSelectedItem().toString().equals("Select")
                    || jcbRespirationRate.getSelectedItem().toString().equals("Select")) {
                JOptionPane.showConfirmDialog(this, "Choose Appropriate values to update Vital Signs");
                return;
            }

            int bloodPressure = Integer.valueOf(jcbBloodPressure.getSelectedItem().toString());
            String painLevel = jcbPainLevel.getSelectedItem().toString();
            int bodyTemp = Integer.valueOf(jcbBodyTemp.getSelectedItem().toString());
            int glucoseLevel = Integer.valueOf(jcbGlucoseLevel.getSelectedItem().toString());
            int oxygenSaturation = Integer.valueOf(jcbOxygenSaturation.getSelectedItem().toString());
            int respirationRate = Integer.valueOf(jcbRespirationRate.getSelectedItem().toString());

            int newId = SimpleTools.getUnusedId("vitalsigns", 1000, 9999);

            VitalSigns vitalSigns = new VitalSigns(newId, currentPatient.getId(), bloodPressure, glucoseLevel,
                    bodyTemp, respirationRate, oxygenSaturation, painLevel, new Date());

            this.vitalSignsDaoImplementation.add(vitalSigns);

            populateVitalSigns();
        } catch (SQLException ex) {
            Logger.getLogger(VitalSignsPortal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddVitalActionPerformed

    private void btnAddVital1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVital1ActionPerformed
                try {
            int selectedRowIndex = tblVitalSigns.getSelectedRow();
            if (selectedRowIndex < 0) {
                JOptionPane.showMessageDialog(this, "Please select a Vital Record to Delete.");
                return;
            }

            DefaultTableModel model = (DefaultTableModel) tblVitalSigns.getModel();
            VitalSigns vitalSigns = (VitalSigns) model.getValueAt(selectedRowIndex, 0);

            this.vitalSignsDaoImplementation.delete(vitalSigns.getId());

            populateVitalSigns();

        } catch (SQLException ex) {
            Logger.getLogger(PharmacyRequestsMngt.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddVital1ActionPerformed

    private void btnAddVital2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVital2ActionPerformed
        // TODO add your handling code here:
        if (jcbPainLevel.getSelectedItem().toString().equals("Select")
                && jcbBloodPressure.getSelectedItem().toString().equals("Select")
                && jcbBodyTemp.getSelectedItem().toString().equals("Select")
                && jcbGlucoseLevel.getSelectedItem().toString().equals("Select")
                && jcbOxygenSaturation.getSelectedItem().toString().equals("Select")
                && jcbRespirationRate.getSelectedItem().toString().equals("Select")) {
            JOptionPane.showMessageDialog(this, "Choose values to Update in Vital Signs");
            return;
        }

        try {
            // TODO add your handling code here:
            int selectedRowIndex = tblVitalSigns.getSelectedRow();
            if (selectedRowIndex < 0) {
                JOptionPane.showMessageDialog(this, "Please select a Vital Record to update.");
                return;
            }

            DefaultTableModel model = (DefaultTableModel) tblVitalSigns.getModel();
            VitalSigns vitalSigns = (VitalSigns) model.getValueAt(selectedRowIndex, 0);
            
            int bloodPressure = vitalSigns.getBloodPressure();
            String painLevel = vitalSigns.getPainLevel();
            int bodyTemp = vitalSigns.getBodyTemp();
            int glucoseLevel = vitalSigns.getGlucoseLevel();
            int oxygenSaturation = vitalSigns.getOxygenSaturation();
            int respirationRate = vitalSigns.getRespirationRate();
            
            if(!jcbBloodPressure.getSelectedItem().toString().equals("Select")){
            bloodPressure = Integer.valueOf(jcbBloodPressure.getSelectedItem().toString());
            }
            if(!jcbPainLevel.getSelectedItem().toString().equals("Select")){
            painLevel = jcbPainLevel.getSelectedItem().toString();
            }
            if(!jcbBodyTemp.getSelectedItem().toString().equals("Select")){
            bodyTemp = Integer.valueOf(jcbBodyTemp.getSelectedItem().toString());
            }
            if(!jcbGlucoseLevel.getSelectedItem().toString().equals("Select")){
            glucoseLevel = Integer.valueOf(jcbGlucoseLevel.getSelectedItem().toString());
            }
            if(!jcbOxygenSaturation.getSelectedItem().toString().equals("Select")){
            oxygenSaturation = Integer.valueOf(jcbOxygenSaturation.getSelectedItem().toString());
            }
            if(!jcbRespirationRate.getSelectedItem().toString().equals("Select")){
            respirationRate = Integer.valueOf(jcbRespirationRate.getSelectedItem().toString());
            }
            
            
            vitalSigns.setBloodPressure(bloodPressure);
            vitalSigns.setPainLevel(painLevel);
            vitalSigns.setBodyTemp(bodyTemp);
            vitalSigns.setGlucoseLevel(glucoseLevel);
            vitalSigns.setOxygenSaturation(oxygenSaturation);
            vitalSigns.setRespirationRate(respirationRate);
            
            
            this.vitalSignsDaoImplementation.update(vitalSigns);

            populateVitalSigns();

        } catch (SQLException ex) {
            Logger.getLogger(PharmacyRequestsMngt.class.getName()).log(Level.SEVERE, null, ex);
        }



    }//GEN-LAST:event_btnAddVital2ActionPerformed

    void populateVitalSigns() {
        try {
            DefaultTableModel model = (DefaultTableModel) tblVitalSigns.getModel();
            model.setRowCount(0);

            for (VitalSigns vitalSigns : this.vitalSignsDaoImplementation.getVitalSignsByPatientId(currentPatient.getId())) {
                // -1 means doctor is not assigned yet and is available for picking up by a doctor

                Object[] row = new Object[8];
                row[0] = vitalSigns;
                row[1] = vitalSigns.getDate();
                row[2] = vitalSigns.getBloodPressure();
                row[3] = vitalSigns.getGlucoseLevel();
                row[4] = vitalSigns.getBodyTemp();
                row[5] = vitalSigns.getRespirationRate();
                row[6] = vitalSigns.getOxygenSaturation();
                row[7] = vitalSigns.getPainLevel();

                model.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(VitalSignsPortal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void populateDataForVitalSignsSelection() {
        jcbBloodPressure.removeAllItems();
        jcbBodyTemp.removeAllItems();
        jcbGlucoseLevel.removeAllItems();
        jcbOxygenSaturation.removeAllItems();
        jcbRespirationRate.removeAllItems();
        jcbPainLevel.removeAllItems();
        jcbBloodPressure.addItem("Select");
        jcbBodyTemp.addItem("Select");
        jcbGlucoseLevel.addItem("Select");
        jcbOxygenSaturation.addItem("Select");
        jcbRespirationRate.addItem("Select");
        jcbPainLevel.addItem("Select");
        jcbPainLevel.addItem("No Pain");
        jcbPainLevel.addItem("Medium");
        jcbPainLevel.addItem("High");
        jcbPainLevel.addItem("Severe");

        for (int i = 12; i <= 240; i++) {
            if (i >= 80 && i <= 240) {
                jcbBloodPressure.addItem(String.valueOf(i));
            }
            if (i >= 20 && i <= 240) {
                jcbGlucoseLevel.addItem(String.valueOf(i));
            }
            if (i >= 96 && i <= 106) {
                jcbBodyTemp.addItem(String.valueOf(i));
            }
            if (i >= 12 && i <= 60) {
                jcbRespirationRate.addItem(String.valueOf(i));
            }
            if (i >= 60 && i <= 100) {
                jcbOxygenSaturation.addItem(String.valueOf(i));
            }
        }
        
        
        
    }
    
    
    void populatePatientDetailsOnPortal(){
            lblPatientName.setText(this.currentPatient.getName());
            lblPatientAge.setText(this.currentPatient.getAge());
            lblPatientPhone.setText(this.currentPatient.getPhoneNumber());
            lblPatientStatus.setText(this.currentPatient.getPatientStatus());
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddVital;
    private javax.swing.JButton btnAddVital1;
    private javax.swing.JButton btnAddVital2;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcbBloodPressure;
    private javax.swing.JComboBox<String> jcbBodyTemp;
    private javax.swing.JComboBox<String> jcbGlucoseLevel;
    private javax.swing.JComboBox<String> jcbOxygenSaturation;
    private javax.swing.JComboBox<String> jcbPainLevel;
    private javax.swing.JComboBox<String> jcbRespirationRate;
    private javax.swing.JLabel lblBloodPressure;
    private javax.swing.JLabel lblBodyTemp;
    private javax.swing.JLabel lblGlucoseLevel;
    private javax.swing.JLabel lblOxygenSaturation;
    private javax.swing.JLabel lblPainLevel;
    private javax.swing.JLabel lblPatientAge;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPatientPhone;
    private javax.swing.JLabel lblPatientStatus;
    private javax.swing.JLabel lblRespirationRate;
    private javax.swing.JLabel lblVitalSigns;
    private javax.swing.JTable tblVitalSigns;
    // End of variables declaration//GEN-END:variables
}
