/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package info.pkg5100.finalproject.ui;

import info.pkg5100.finalproject.daos.IncidenteCaseDaoImplementation;
import info.pkg5100.finalproject.daos.OrganizationDaoImplementation;
import info.pkg5100.finalproject.daos.PatientDaoImplementation;
import info.pkg5100.finalproject.daos.UserDaoImplementation;
import info.pkg5100.finalproject.models.IncidentCase;
import info.pkg5100.finalproject.models.Organization;
import info.pkg5100.finalproject.models.Patient;
import info.pkg5100.finalproject.models.User;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;

/**
 *
 * @author ankit
 */
public class HospitalIncidentManager extends javax.swing.JPanel {

	/**
	 * Creates new form HospitalIncidentManager
	 */

    JPanel mainWorkJPanel;
    User currentuser;
    Organization currentOrganization;

    UserDaoImplementation userDaoImplementation;
    OrganizationDaoImplementation organizationDaoImplementation;
    IncidenteCaseDaoImplementation incidenteCaseDaoImplementation;
    PatientDaoImplementation patientDaoImplementation;

	public HospitalIncidentManager() {
		initComponents();
	}

    public HospitalIncidentManager(JPanel mainWorkJPanel, User currentuser, Organization currentOrganization) throws SQLException {
        initComponents();

        this.currentOrganization = currentOrganization;
        this.currentuser = currentuser;
        this.mainWorkJPanel = mainWorkJPanel;

        this.userDaoImplementation = new UserDaoImplementation();
        this.organizationDaoImplementation = new OrganizationDaoImplementation();
        this.incidenteCaseDaoImplementation = new IncidenteCaseDaoImplementation();
        this.patientDaoImplementation = new PatientDaoImplementation();

        populateRequestsTable();
        populateAcceptedCaseTable();
    }

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAcceptedIncidents = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblIncidentRequest = new javax.swing.JTable();
        btnAcceptRequest = new javax.swing.JButton();

        tblAcceptedIncidents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "Description", "Location ", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblAcceptedIncidents);

        jLabel1.setText("Requested incidents:");

        jLabel2.setText("Accepted incidents:");

        tblIncidentRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "Description", "Location ", "Status"
            }
        ));
        jScrollPane3.setViewportView(tblIncidentRequest);

        btnAcceptRequest.setText("Accepted");
        btnAcceptRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnAcceptRequestActionPerformed(evt);
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(397, 397, 397)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(356, 356, 356)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(314, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAcceptRequest)
                .addGap(223, 223, 223))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(209, 209, 209)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(323, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, Short.MAX_VALUE)
                .addComponent(btnAcceptRequest)
                .addGap(102, 102, 102)
                .addComponent(jLabel2)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(65, 65, 65)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(406, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptRequestActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_btnAcceptRequestActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblIncidentRequest.getSelectedRow();
        if(selectedRowIndex < 0 ) {
            JOptionPane.showMessageDialog(this, "Please select an incident.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblIncidentRequest.getModel();
        IncidentCase incidentCase = (IncidentCase) model.getValueAt(selectedRowIndex, 0);

        incidentCase.setOrgId(this.currentOrganization.getId());
        incidentCase.setOrgType(this.currentOrganization.getType());
        incidentCase.setStatus("hospital-accepted");

        incidentCase.setHospitalCaseAccepted("true");
        incidentCase.setHospitalId(this.currentOrganization.getId());

        this.incidenteCaseDaoImplementation.update(incidentCase);
        populateAcceptedCaseTable();
        populateRequestsTable();


        for(Patient patient : this.patientDaoImplementation.getPatientsByIncidentCaseId(incidentCase.getId())) {
            System.out.println(patient.getId());
            patient.setHospitalId(this.currentOrganization.getId());
            this.patientDaoImplementation.update(patient);
        }

    }//GEN-LAST:event_btnAcceptRequestActionPerformed

    void populateAcceptedCaseTable() throws SQLException {
        DefaultTableModel model = (DefaultTableModel) tblAcceptedIncidents.getModel();
        model.setRowCount(0);

        for(IncidentCase incidentCase : this.incidenteCaseDaoImplementation.getIncidentCasesByOrgIdAndOrgTypeAndStatusAndLocation(this.currentOrganization.getId(),
                this.currentOrganization.getType(),
                "hospital-accepted",
                currentOrganization.getLocation())) {
            Object[] row = new Object[4];
            row[0] = incidentCase;
            row[1] = incidentCase.getDescription();
            row[2] = incidentCase.getLocation();
            row[3] = incidentCase.getStatus();

            model.addRow(row);
        }
    }

    void populateRequestsTable() throws SQLException {
        DefaultTableModel model = (DefaultTableModel) tblIncidentRequest.getModel();
        model.setRowCount(0);

        for(IncidentCase incidentCase : this.incidenteCaseDaoImplementation.getIncidentCasesByStatusAndLocation("hospital-requested", currentOrganization.getLocation())) {
            Object[] row = new Object[4];
            row[0] = incidentCase;
            row[1] = incidentCase.getDescription();
            row[2] = incidentCase.getLocation();
            row[3] = incidentCase.getStatus();

            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceptRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblAcceptedIncidents;
    private javax.swing.JTable tblIncidentRequest;
    // End of variables declaration//GEN-END:variables
}
